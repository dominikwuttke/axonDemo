# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    
    strategy:
      matrix:
        Java: ['11', '17']
        os:  [ubuntu-latest]
        mongodb-version: ['4.4']
    name: Test on JDK ${{ matrix.Java }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v2.3.1
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}    

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.6.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}

    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Run tests
      run: mvn -B test

    - name: Clean up local repository before caching (Linux/Mac)
      if: ${{ matrix.os != 'windows-latest'}}
      run: rm -rf ~/.m2/repository/io/sapl

    - name: Clean up local repository before caching (Win)
      if: ${{ matrix.os == 'windows-latest'}}
      run: rm -Recurse -Force ~/.m2/repository/io/sapl
      
  analyze:
    needs: [tests]
    name: Code analysis and coverage
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        # avoid shallow clone to ensure correct sonarqube auto assignment
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v2.3.1
      with:
        distribution: 'temurin'
        java-version: 11


    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Run analysis (JaCoCo, Sonar)
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B org.jacoco:jacoco-maven-plugin:0.8.7:prepare-agent verify org.jacoco:jacoco-maven-plugin:0.8.7:report sonar:sonar -Dsonar.host.url=https://sonar.ftk.de -Dsonar.login=${SONAR_TOKEN} -Dsonar.exclusions=**/xtext-gen/**/*,**/xtend-gen/**/*,**/emf-gen/**/*
      
    - name: Clean up local repository before caching
      run: rm -rf ~/.m2/repository/io/sapl
